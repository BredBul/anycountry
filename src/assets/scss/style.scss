@use "sass:list";
@use "sass:math";

@import url(https://fonts.googleapis.com/css?family=Roboto+Slab:100,200,300,regular,500,600,700,800,900);

$fontFamily: "Roboto Slab";

@import "./mixins/base.scss";
@import "./base/null";

body {
  font-size: 14px;
  line-height: 1.3;
  background-color: getColor(bg);
  color: getColor(sec);
  &._lock {
    overflow: hidden;
    touch-action: none;
  }
}

._container {
  max-width: $pc;
  margin: 0 auto;
  width: 100%;
  padding: 0 15px;
}

.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;

  > main {
    flex: 1 1 auto;
    padding-bottom: 50px;
  }

  > * {
    min-width: 0;
  }

  *._loaded {
  }
}

@import "./base/ui";

.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.25s ease;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

.menu-enter-active,
.menu-leave-active {
  transition: transform 0.4s;
}

.menu-enter-from {
  transform: translate(100%, 0);
}
.menu-leave-to {
  transform: translate(100%, 0);
}

.vs__dropdown-toggle {
  background-color: getColor(bg) !important;
}

.main-block {
  display: flex;
  gap: 10px;
  margin-top: 30px;
  &__container {
  }

  &__content {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 15px 30px;
  }
  &__search {
    padding: 10px;
    margin-bottom: 20px;
    max-width: 350px;
    width: 100%;
    border-radius: 6px;
    background: getColor(base);
    border: 1px solid getColor(border);
    box-shadow: 0px 2px 4px rgb(0 0 0 / 8%);

    input {
      appearance: none;
      width: 100%;
      padding: 10px;
      background: getColor(base);
      &::placeholder {
        color: getColor(sec);
      }
    }
  }
  &__filters {
    display: flex;
    flex-direction: column;
    align-self: flex-start;
    align-content: center;
    gap: 20px;

    margin: 0px 0;
    padding: 30px 10px 0;
    height: 100%;

    position: fixed;
    top: 72px;
    right: 0;

    z-index: 10;

    background-color: getColor(base);
    border-left: 1px solid getColor(border);
    .vs__selected-options {
      padding: 10px;
    }
  }
  &__regions {
    max-width: 350px;
    width: 100%;
    box-shadow: 0px 2px 4px rgb(0 0 0 / 8%);
  }

  &__checkboxes {
    display: flex;
    flex-direction: column;
    &-wrap {
      display: flex;
      gap: 10px;
      padding: 10px 0;
      @media (max-width: $tablet) {
        gap: 5px;
      }
    }
    div {
      position: relative;
    }
    label {
      width: 35px;
      height: 35px;
      border-radius: 50%;
      display: block;
      position: relative;
      z-index: 5;
      cursor: pointer;
      border: 1px solid #cdcdcd;
      transition: all 0.3s ease 0s;
      @media (max-width: $tablet) {
        width: 30px;
        height: 30px;
      }
    }
    input {
      opacity: 0;
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: 0;
      &:checked {
        + label {
          box-shadow: rgb(0 0 0 / 50%) 0px 3px 8px;
          transform: scale(1.15);
        }
      }
    }
  }
  &__properties {
    display: flex;
    flex-direction: column;
    gap: 10px;
    max-width: 350px;
    &-wrap {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      div {
        display: flex;
        gap: 5px;
      }
    }
  }
  &__checkbox {
    &-Red {
      background-color: rgb(180, 0, 0);
    }

    &-Saffron {
      background-color: rgb(255, 150, 0);
    }

    &-Yellow {
      background-color: rgb(255, 200, 0);
    }

    &-Green {
      background-color: rgb(0, 128, 0);
    }

    &-Blue {
      background-color: rgb(0, 0, 128);
    }

    &-LiBlue {
      background-color: rgb(0, 128, 255);
    }

    &-Black {
      background-color: rgb(0, 0, 0);
    }

    &-White {
      background-color: rgb(255, 255, 255);
    }
  }
}
